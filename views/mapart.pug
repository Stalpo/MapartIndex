doctype html
html
  - const pageTitle = "Map Art: " + mapId
  include includes/head.pug
  body
    include includes/navbar.pug
    div.container
      h1.text-center Map Art
      hr
      if admin || mod
        div.text-center
          a.btn.btn-primary(href=`/mapart/edit/${mapId}`) Visit Map Edit Page

      div#mapContainer.text-center
        i#loadingSpinner.fa.fa-spinner.fa-spin.fa-3x
        p Loading map data...

      script(src="https://code.jquery.com/jquery-3.6.0.min.js")
      script.
        document.addEventListener('DOMContentLoaded', () => {
          const mapId = `#{mapId}`;
          const userId = `#{userId}`;
          const mapContainer = document.getElementById('mapContainer');

          fetch(`/api/mapArt/${mapId}`)
            .then(response => {
              if (!response.ok) {
                throw new Error(response.statusText);
              }
              return response.json();
            })
            .then(map => {
              if (map) {
                const imageUrl = `/public/uploads/mapart/${map.imgUrl}`;
                const dateUploaded = map.createdAt ? new Date(map.createdAt).toLocaleString('en-US', {
                  year: 'numeric',
                  month: '2-digit',
                  day: '2-digit',
                  hour: 'numeric',
                  minute: 'numeric',
                  hour12: true
                }) : 'Unknown';

                const mapContent = document.createElement('div');
                const mapInfo = document.createElement('div');
                mapInfo.innerHTML = `
                  <p>Map ID: ${map.displayName}</p>
                  <div class="row">
                    <div class="col-md-12 text-center">
                      <img src="${imageUrl}" alt="${mapId}" class="pixelated-image img-fluid" style="width: 60%; max-width: none; height: auto; border: 1px solid #ddd; border-radius: 5px; box-shadow: 0 0 5px rgba(0, 0, 0, 0.1); image-rendering: pixelated;">
                    </div>
                  </div>
                  <br>
                  <div class="row">
                    <div class="col-md-12 text-center">
                      <p>Artist: ${map.artist || 'N/A'}</p>
                      <p>Uploaded By: <a href="/profile/${map.username}">${map.username}</a></p>
                      <p>NSFW: ${map.nsfw}</p>
                      <p>Date Uploaded: ${dateUploaded}</p>
                      <p>Views: ${map.views}</p>
                    </div>
                  </div>`;
                mapContent.appendChild(mapInfo);
                mapContainer.innerHTML = ''; // Clear existing.
                mapContainer.appendChild(mapContent);
              } else {
                mapContainer.innerHTML = '<div class="alert alert-danger" role="alert">MapArt not found!</div>';
              }
            })
            .catch(error => {
              console.error('Error fetching data:', error);
              mapContainer.innerHTML = '<div class="alert alert-danger" role="alert">Error fetching data: ' + error.message + '</div>';
            });


          function handleFavorite(mapId, action) {
            fetch(`/mapart/favorite/${mapId}`, {
              method: action === 'add' ? 'POST' : 'DELETE',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ userId: userId }),
            })
            .then(response => {
              if (!response.ok) {
                throw new Error('Failed to perform action');
              }
              return response.json();
            })
            .then(data => {
              console.log(data);
            })
            .catch(error => {
              console.error('Error:', error);
            });
          }

          /**
          function createFavoriteButton(mapId) {
            const button = document.createElement('button');
            button.textContent = 'Loading...';

            // Fetch favorite status from API
            fetch(`/mapart/favorite/${mapId}`)
              .then(response => {
                if (!response.ok) {
                  throw new Error('Failed to fetch favorite status');
                }
                return response.json();
              })
              .then(data => {
                // Set button text based on favorite status
                button.textContent = data.isFavorite ? 'Remove Favorite' : 'Add Favorite';
                
                // Set onclick event based on favorite status
                button.onclick = function() {
                  const action = data.isFavorite ? 'remove' : 'add';
                  handleFavorite(mapId, action);
                  
                  // Toggle button text after click
                  button.textContent = data.isFavorite ? 'Add Favorite' : 'Remove Favorite';
                  // Update favorite status
                  data.isFavorite = !data.isFavorite;
                };
              })
              .catch(error => {
                console.error('Error:', error);
                button.textContent = 'Error'; // Display error text if fetching failed
              });

            return button;
          }

          let isFavorite = false;
          const favoriteButton = createFavoriteButton(mapId, isFavorite);
          document.body.appendChild(favoriteButton);
          */
            
        });

      include includes/scripts.pug
