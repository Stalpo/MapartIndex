// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./src/generated/client"
}

datasource db {
  provider = "mongodb"
  url      = process.env.DATABASE_URL
}

model User {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username  String   @unique
  hashedPw  String
  mcUuid    String
  discordId String
  mapIds    MapId[]
  mapArts   MapArt[]
}

model MapArt {
  id          String   @id @default(uuid()) @map("_id")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  creator     String // if not known is "N/A"
  creatorUser User?    @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  creatorId   String?
  imgUrl      String
  name        String
  description String
  mapIds      MapId[]
  rotations   Int[] // 0-3 rotation
  hSize       Int
  vSize       Int
}

model MapId {
  id          String   @id @default(uuid()) @map("_id")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  creator     String // if not known is "N/A"
  creatorUser User?    @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  creatorId   String?
  Map         MapArt?  @relation(fields: [mapId], references: [id], onDelete: Cascade)
  mapId       String?
  imgUrl      String
  data        String   @unique
}
